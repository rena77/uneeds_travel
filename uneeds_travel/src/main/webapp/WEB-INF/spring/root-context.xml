<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:jdbc="http://www.springframework.org/schema/jdbc"
 xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
 xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
  http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

 <!-- Root Context: defines shared resources visible to all other web components -->
<!-- 
   Oracle connection
      
   Oracle 접속 url
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
    <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
    oracle 접속 id / pw
    <property name="username" value="scott"></property>
    <property name="password" value="1234"></property>
    </bean>
    
    Oracle SqlSessionFactoryBean
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:/oracle-config.xml"></property>
      <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
   </bean>

   SqlSessionTemplate의 설정
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
      destroy-method="clearCache">
      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
   </bean>
 -->       
    

	<!-- MySQL dataSource -->
	<bean id="mySqlDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url" value="jdbc:mysql://192.168.0.18:3306/uneeds_db?useSSL=false&amp;serverTimezone=Asia/Seoul"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>
	<!--  -->
	<bean id="MysqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mySqlDataSource"></property> <!-- ref에 bean의 id (DI,할당)  -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property> 
	</bean>
	<!-- sqlSessionTemplate의 설정 -->
	<bean id="mysqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="MysqlSessionFactory"></constructor-arg>
	</bean>
	<!-- 요청 sqlSessionMySql -->
	
		<!-- 여행 -->
	<context:component-scan base-package="com.travel.persistence"></context:component-scan>
	<context:component-scan base-package="com.travel.service"></context:component-scan>
	
	<!-- 메인 -->
	<context:component-scan base-package="com.main.persistence"/>
	<context:component-scan base-package="com.main.service"/>

</beans>